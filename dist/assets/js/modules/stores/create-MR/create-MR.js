"use strict";!function(){var app=angular.module("app");app.controller("layout.standard.MRController",["$scope","BuyerSupplierService","CustomerService","$state","$mdDialog","StoreService","SalesOrderService","Notification","$stateParams","MRService","POService",function($scope,BuyerSupplierService,CustomerService,$state,$mdDialog,StoreService,SalesOrderService,Notification,$stateParams,MRService,POService){function LoadMR(){MRService.getOne($stateParams.MRId).then(function(res){$scope.MR=res.data})}function FilterContacts(data){$scope.contactPersons=[],data.map(function(item){var name=null;item.firstname&&(name=item.firstname),item.lastname&&(name=name?name+" "+item.lastname:item.lastname),name&&$scope.contactPersons.push({id:item.id,name:name})})}function FilterAddresses(data){$scope.addresses=[],data.map(function(res){var address;res.nameofaddress&&(address=res.nameofaddress),res.addressline1&&(address=address?address+","+res.addressline1:res.addressline1),res.addressline2&&(address=address?address+","+res.addressline2:res.addressline2),res.city&&(address=address?address+","+res.city:res.city),res.state&&(address=address?address+","+res.state:res.state),res.country&&(address=address?address+","+res.country:res.country),$scope.addresses.push({id:res.id,address:address})})}function getRowId(row){return row.id}$scope.selectedTab=0;var selectedItems=[];$scope.storeTypes=[],$scope.editQuantity=!1,$scope.disableSaveItems=!1,$scope.disableSave=!1,$scope.MR={},MRService.getStatus().then(function(res){$scope.MRStatus=res.data.results}),MRService.getRequestType().then(function(result){$scope.requestType=result.data.results}),MRService.getPurpose().then(function(result){$scope.purposeTypeList=result.data.results}),$scope.current_user.data&&$scope.current_user.data.company&&(SalesOrderService.get({supplier_company_id:$scope.current_user.data.company.id}).then(function(res){$scope.SOList=res.data.results}),StoreService.getStoreTypes({company:$scope.current_user.data.company.id}).then(function(res){$scope.storeTypesList=res.data.results}),POService.get({buyer_company_id:$scope.current_user.data.company.id}).then(function(data){$scope.count=data.data.count,$scope.poList=data.data.results})),$scope.FilterDestinationDetails=function(data){"Sub-Vendors"==data.name?BuyerSupplierService.get().then(function(res){$scope.storeNames=res.data.results}):"Customer"==data.name?CustomerService.get().then(function(res){$scope.storeNames=res.data.results}):($scope.storeNames=[],StoreService.get({store_type:data.id,company:$scope.current_user.data.company.id}).then(function(res){$scope.storeNames=res.data.results,$scope.storeNames=$scope.storeNames.map(function(item){return item.name=item.store_name,item})}))},$scope.selectSourceList=function(data){$scope.sourceNames=[],StoreService.get({store_type:data,company:$scope.current_user.data.company.id}).then(function(res){$scope.sourceNames=res.data.results})},$scope.SelectContactsData=function(data){2==$scope.MR.request_type?(data.contacts&&data.contacts.length&&FilterContacts(data.contacts),data.addresses&&data.addresses.length&&FilterAddresses(data.addresses)):(data.company.contact&&data.company.contact.length&&FilterContacts(data.company.contact),data.company.addresses&&data.company.addresses.length&&FilterAddresses(data.company.addresses))},$scope.FilterItems=function(data){StoreService.getInventoryItems({poId:data,store:$scope.MR.source_detail}).then(function(res){selectedItems=[],$scope.inventoryList=res.data.results,$scope.UiGridOptions.data=[],$scope.UiGridOptions.data=res.data.results,(2==$scope.MR.request_type||1==$scope.MR.request_type&&1==$scope.MR.purpose)&&($scope.UiGridOptions.data=$scope.UiGridOptions.data.map(function(item){var quantity=item.quantity_received-item.quantity_issued;return item.quantity_received=quantity,item}))})},$scope.selectDestination=function(data){1==data.purpose&&($scope.storeTypesData=[],$scope.storeTypesList.map(function(item){"Production"==item.name&&$scope.storeTypesData.push(item)})),2==data.purpose&&($scope.storeTypesData=[],$scope.storeTypesList.map(function(item){"Inward Store"!=item.name&&"Store(Others)"!=item.name||$scope.storeTypesData.push(item)}))},$scope.filterStoresData=function(data){StoreService.getInventoryLocations({store_name:data}).then(function(res){selectedItems=[],$scope.inventoryList=res.data.results,$scope.UiGridOptions.data=[],$scope.UiGridOptions.data=res.data.results,($scope.MR.request_type&&2==$scope.MR.request_type||1==$scope.MR.request_type&&1==$scope.MR.purpose)&&($scope.UiGridOptions.data=$scope.UiGridOptions.data.map(function(item){var quantity=item.quantity_received-item.quantity_issued;return item.quantity_received=quantity,item}))})},$stateParams.MRId?LoadMR():$scope.disableTabs={first:!0,second:!0},$scope.save=function(data){if($scope.disableSave=!0,!data.request_type)return Notification.error({message:"please select request type",positionX:"right",positionY:"top"}),void($scope.disableSave=!1);if(!data.order_reference)return Notification.error({message:"please select order reference",positionX:"right",positionY:"top"}),void($scope.disableSave=!1);if(!data.source_type)return Notification.error({message:"please select source type",positionX:"right",positionY:"top"}),void($scope.disableSave=!1);if(!data.source_detail)return Notification.error({message:"please select source detail",positionX:"right",positionY:"top"}),void($scope.disableSave=!1);if(!data.destinationType)return Notification.error({message:"please select destination type",positionX:"right",positionY:"top"}),void($scope.disableSave=!1);if(!data.destinationDetail)return Notification.error({message:"please select destination Detail",positionX:"right",positionY:"top"}),void($scope.disableSave=!1);if(data.source_detail==data.destinationDetail)return Notification.error({message:"source and destination details must be different",positionX:"right",positionY:"top"}),void($scope.disableSave=!1);var dt=null,dd=null;dt=data.destinationType,dd=data.destinationDetail,data.destinationDetail&&(data.destination_detail=data.destinationDetail.name),data.destination_type=data.destinationType.id,data.company=$scope.current_user.data.company.id,$scope.MRStatus.map(function(item){"Created"==item.name&&(data.mr_status=item.id)}),MRService.post(data).then(function(res){$scope.MR=res.data,$scope.MR.destinationType=dt,$scope.MR.destinationDetail=dd,(2==$scope.MR.request_type||1==$scope.MR.request_type&&1==$scope.MR.purpose)&&($scope.UiGridOptions.data=$scope.UiGridOptions.data.map(function(item){var quantity=item.quantity_received-item.quantity_issued;return item.quantity_received=quantity,item}));var date=$scope.MR.created.toString();$scope.MR.created_date=date.slice(0,10),$scope.disableTabs.first=!1,Notification.success({message:"Successfully created",positionX:"right",positionY:"top"}),$scope.selectedTab=1},function(err){$scope.disableSave=!1})},$scope.cancel=function(){selectedItems=[],$state.go("storeDashboard.materialRequisition.list")},$scope.UiGridOptions={enableCellEditOnFocus:!0,enableColumnResizing:!0,enableFiltering:!0,enableGridMenu:!0,showGridFooter:!0,showColumnFooter:!0,fastWatch:!0,rowIdentity:getRowId,getRowIdentity:getRowId,importerDataAddCallback:function(grid,newObjects){$scope.myData=$scope.data.concat(newObjects)},onRegisterApi:function(registeredApi){$scope.gridApi=registeredApi},columnDefs:[{name:"checked",displayName:"",width:75,cellTemplate:'<input type="checkbox" ng-model="row.entity.checked" ng-click="grid.appScope.rowClick(row.entity)">',visible:!$scope.showColumn},{name:"inventory.id",displayName:"Inventory Id",width:100,pinnedLeft:!0,enableCellEdit:!1,enableSorting:!0},{field:"inventory.po_item.title",displayName:"Title",width:200,pinnedLeft:!0,enableCellEdit:!1,enableSorting:!0},{field:"inventory.po_item.description",displayName:"Description",width:220,pinnedLeft:!0,enableCellEdit:!1,enableSorting:!0},{field:"quantity",displayName:"Available Quantity",width:125,pinnedLeft:!0,enableCellEdit:!1},{field:"issued_quantity",displayName:"Quantity to be issued",width:125,pinnedLeft:!0,enableCellEdit:!1},{field:"inventory.po_item.unit_measure",displayName:"Unit Of Measure",width:100,pinnedLeft:!0,enableCellEdit:!1}]},$scope.itemsGridOptions={enableCellEditOnFocus:!0,enableColumnResizing:!0,enableFiltering:!0,enableGridMenu:!0,showGridFooter:!0,showColumnFooter:!0,fastWatch:!0,rowIdentity:getRowId,getRowIdentity:getRowId,importerDataAddCallback:function(grid,newObjects){$scope.myData=$scope.data.concat(newObjects)},onRegisterApi:function(registeredApi){$scope.gridApi=registeredApi},columnDefs:[{name:"checked",displayName:"",width:75,cellTemplate:'<input type="checkbox" ng-model="row.entity.checked" ng-click="grid.appScope.rowClick(row.entity)">',visible:!$scope.showColumn},{name:"inventory.id",displayName:"Inventory Id",width:100,pinnedLeft:!0,enableCellEdit:!1,enableSorting:!0},{field:"inventory.po_item.title",displayName:"Title",width:200,pinnedLeft:!0,enableCellEdit:!1,enableSorting:!0},{field:"inventory.po_item.description",displayName:"Description",width:200,pinnedLeft:!0,enableCellEdit:!1,enableSorting:!0},{field:"quantity",displayName:"Available Quantity",width:125,pinnedLeft:!0,enableCellEdit:!1},{field:"issued_quantity",displayName:"Quantity to be issued",width:125,pinnedLeft:!0,enableCellEdit:!0},{field:"inventory.po_item.unit_measure",displayName:"Unit Of Measure",width:125,pinnedLeft:!0,enableCellEdit:!1}]},$scope.rowClick=function(data){if(data.checked)selectedItems.push(data);else{var index=null;selectedItems.map(function(item,$index){item.id==data.id&&(index=$index)}),selectedItems.splice(index,1)}},$scope.saveToList=function(){return selectedItems.length?($scope.selectedTab=1,$scope.editQuantity=!0,$scope.itemsGridOptions.data=[],$scope.itemsGridOptions.data=selectedItems,$scope.itemsGridOptions.data=$scope.itemsGridOptions.data.map(function(item){return item.checked=!1,item}),$scope.disableTabs.second&&($scope.disableTabs.second=!1),$scope.selectedTab=2,void 0):void Notification.error({message:"please select items",positionX:"right",positionY:"top"})},$scope.saveItems=function(){$scope.disableSaveItems=!0;var data=angular.copy($scope.itemsGridOptions.data),error=!1,items=[];if(data.map(function(record){if(!error){if(!record.issued_quantity)return Notification.error({message:"please enter issue quantity",positionX:"right",positionY:"top"}),$scope.disableSaveItems=!1,void(error=!0);if(record.issued_quantity&&record.inventory.po_item.quantity_received&&Number(record.issued_quantity)>Number(record.inventory.po_item.quantity_received))return Notification.error({message:"quantity issued must be less than available quantity",positionX:"right",positionY:"top"}),$scope.disableSaveItems=!1,void(error=!0);if(record.inventory.net_quantity>0){var quantity=record.inventory.net_quantity-record.inventory.issued_quantity;if(quantity<0)return Notification.error({message:"issued quantity is not availble in "+record.id,positionX:"right",positionY:"top"}),void(error=!0)}var obj={};obj.issued_quantity=record.issued_quantity,obj.inventory=record.inventory.id,obj.MR=$scope.MR.id,items.push(obj)}}),!error&&items.length)MRService.postItems(items).then(function(res){$scope.disableSaveItems=!1,Notification.success({message:"Successfully created",positionX:"right",positionY:"top"}),$scope.cancel()},function(err){$scope.disableSaveItems=!1});else if(!error)return void Notification.error({message:"please select items",positionX:"right",positionY:"top"})},$scope.selectAll=function(value,gridData){value?(gridData=gridData.map(function(item){return item.checked=!1,item}),selectedItems=[]):(gridData=gridData.map(function(item){return item.checked=!0,item}),selectedItems=gridData)},$scope.remove=function(data){var data=[],checked=[];return $scope.itemsGridOptions.data.map(function(item){item.checked?checked.push(item):data.push(item)}),checked.length?($scope.itemsGridOptions.data=[],void($scope.itemsGridOptions.data=data)):void Notification.error({message:"please select items to remove",positionX:"right",positionY:"top"})},$scope.updateDetails=function(ev){var data=[];return $scope.itemsGridOptions.data.map(function(item){item.checked&&data.push(item)}),data.length?$mdDialog.show({controller:"layout.order.updateGRNItems",templateUrl:"assets/js/modules/po/GRN/update-grn-details/update-grn-details.html",parent:angular.element(document.body),targetEvent:ev,multiple:!0,clickOutsideToClose:!0,locals:{$dialogScope:{display:"material_requisition"}}}).then(function(res){$scope.UiGridOptions.data=$scope.UiGridOptions.data.map(function(item){return item.checked&&res&&res.issued_quantity&&(item.issued_quantity=res.issued_quantity),item})}):void Notification.error({message:"please select items",positionX:"right",positionY:"top"})},$scope.FilterList=function(data){$scope.purposeType=[],$scope.storeTypesData=[],1==data&&($scope.purposeTypeList.map(function(item){"Processing"!=item.name&&"Transfer"!=item.name||$scope.purposeType.push(item)}),$scope.storeTypesList.map(function(item){"Production"!=item.name&&"Inward Store"!=item.name&&"Store(Others)"!=item.name||$scope.storeTypesData.push(item)})),2==data&&($scope.purposeTypeList.map(function(item){"Sale"!=item.name&&"Non-billable-Returnable"!=item.name&&"Non-billable-Non-Returnable"!=item.name||$scope.purposeType.push(item)}),$scope.storeTypesList.map(function(item){"Customer"!=item.name&&"Sub-Vendors"!=item.name||$scope.storeTypesData.push(item)}))}}])}();
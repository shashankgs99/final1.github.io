"use strict";!function(){var app=angular.module("app");app.controller("layout.standard.createCustomer",["$scope","$q","$rootScope","UserService","$state","s3Service","CustomerService","Notification","$timeout","CategoryService","$stateParams","$mdDialog","$dialogScope",function($scope,$q,$rootScope,UserService,$state,s3Service,CustomerService,Notification,$timeout,CategoryService,$stateParams,$mdDialog,$dialogScope){function CreateFilterFor(query){var lowercaseQuery=query.toLowerCase();return function(category){var result=category.parentCategory.toLowerCase();return 0===result.indexOf(lowercaseQuery)}}$scope.attachments=[],$scope.customer={},$scope.catalogs=[],$scope.contactList=[],$scope.arrowDirection=!0,$scope.existingAttachments=[],$scope.existingCatalogs=[],$scope.fileAttachments=[],$scope.catalogFiles=[],$scope.disabled=!1;$scope.addresses=[];var categoriesData;$scope.selectedCategories=[],$scope.showsuppliers=!1,($state.current.name.includes("supplierDashboard.customers")||$state.current.name.includes("projects"))&&($scope.showsuppliers=!0),$scope.hideButtons=!0,$scope.title=$dialogScope.type,UserService.getRoleTypes().then(function(roledata){$scope.roleTypes=[],roledata.data.count>0&&(roledata.data.results.map(function(item){1!=item.id&&9!=item.id||$scope.roleTypes.push({id:item.id,label:item.role_type_name})}),"client"==$dialogScope.type?($scope.roleTypes.map(function(item){9==item.id&&($scope.customer.role_type=item)}),$scope.disabled=!0):($scope.roleTypes.map(function(item){1==item.id&&($scope.customer.role_type=item)}),$scope.disabled=!0))}),$scope.removeUploadedCategories=function($index){$scope.customer.categories.splice($index,1)},$scope.remove=function($index,data){$scope.selectedCategories.splice($index,1),data&&data.splice(0,1)},$scope.removecategory=function($index,data){data.splice($index,1)},$scope.querySearch=function(query){var results=query?$scope.categories.filter(CreateFilterFor(query)):$scope.categories,deferred=$q.defer();return $timeout(function(){deferred.resolve(results)},1e3*Math.random(),!1),deferred.promise},$scope.selectedCategory=function(data,total,edit){if(data&&data.parentCategory){$scope.customer.parentCategory=data.parentCategory,edit||(total.sub_category="",total.sub_sub_category="",total.sub_sub_sub_category="",$scope.subcategories=[],$scope.subsubcategories=[],$scope.subsubsubcategories=[]);var category_temp=categoriesData.filter(function(categoryData){return categoryData.parent_category===data.parentCategory&&null!=categoryData.sub_category});$scope.subcategories=category_temp.map(function(item){return item.sub_category}),$scope.subcategories=$scope.subcategories.filter(function(x,i,a){return a.indexOf(x)==i})}},$scope.selectedSubCategory=function(data){var category_temp=categoriesData.filter(function(categoryData){return categoryData.sub_category===data&&null!=categoryData.sub_sub_category});$scope.subsubcategories=category_temp.map(function(item){if(item.sub_sub_category)return item.sub_sub_category}),$scope.subsubcategories=$scope.subsubcategories.filter(function(x,i,a){return a.indexOf(x)==i})},$scope.selectedSubSubCategory=function(data){var category_temp=categoriesData.filter(function(categoryData){return categoryData.sub_sub_category===data&&null!=categoryData.sub_sub_sub_category});$scope.subsubsubcategories=category_temp.map(function(item){if(item.sub_sub_sub_category)return item.sub_sub_sub_category})},$scope.AddCategories=function(){$scope.selectedCategories?$scope.selectedCategories.push({show:!0}):($scope.selectedCategories=[],$scope.selectedCategories.push({show:!0}))},$scope.AddNewCategories=function(data){data.newCategories=[],data.newCategories.push({}),data.show=!1},CategoryService.get({page_size:1e4}).then(function(data){categoriesData=data.data.results,$scope.categories=categoriesData.map(function(categoryData){if(categoryData.parent_category)return{parentCategory:categoryData.parent_category}}),$scope.categories=$scope.categories.filter(function(x,i,a){return a.map(function(item){return item.parentCategory}).indexOf(x.parentCategory)==i})}),$scope.AddCategories=function(){$scope.selectedCategories?$scope.selectedCategories.push({show:!0}):($scope.selectedCategories=[],$scope.selectedCategories.push({show:!0}))},$state.current.name.includes("buyerDashboard.customers")?$stateParams.customerId?$scope.name="Edit Customer":$scope.name="Add Customer":$state.current.name.includes("buyerDashboard.suppliers")&&($stateParams.customerId?$scope.name="Edit Supplier":$scope.name="Add Supplier"),$scope.state=!0,$state.current.name.includes("adminDashboard.customers")&&($scope.state=!1),$scope.AddAttachments=function(){$scope.fileAttachments.push({})},$scope.AddCatalogs=function(){$scope.catalogFiles.push({})},$scope.fileAttachments.length||$scope.fileAttachments.push({}),$scope.catalogFiles.length||$scope.catalogFiles.push({}),$scope.removeAttachment=function(files,index){files.splice(index,1),$scope.attachments.splice(index,1)},$scope.removeCatalog=function(files,index){files.splice(index,1),$scope.catalogs.splice(index,1)},$stateParams.customerId&&CustomerService.getOne($stateParams.customerId).then(function(data){$scope.customer=data.data,$scope.customer.addresses.length&&($scope.addresses=$scope.customer.addresses),$scope.customer.role_type?$scope.customer.role_type=$scope.customer.role_type.map(function(item){return{id:item,label:$scope.roleTypes.filter(function(type){return type.id===item})[0]}}):$scope.customer.role_type=[],$scope.customer.contacts&&$scope.customer.contacts.length&&($scope.contactList=$scope.customer.contacts),$scope.customer.attachments&&$scope.customer.attachments.forEach(function(item){var fileAttachment=item.split("/");$scope.existingAttachments.push({fileName:fileAttachment.pop(),filePath:item})}),$scope.customer.catalogs&&$scope.customer.catalogs.forEach(function(item){var catalog=item.split("/");$scope.existingCatalogs.push({fileName:catalog.pop(),filePath:item})})}),$scope.removeCatalogs=function(files,index){$scope.existingCatalogs.splice(index,1)},$scope.removeAttachments=function(files,index){$scope.existingAttachments.splice(index,1)},$scope.customer={role_type:[]},$scope.catalogImagesToUpload=[],$scope.removeContact=function(contacts,index){contacts.splice(index,1)};var skipClick=!1;if($scope.EditContact=function(ev,data,$index){$mdDialog.show({controller:"customer.contacts",templateUrl:"assets/js/modules/customer/create-customer/customer-contact.html",parent:angular.element(document.body),targetEvent:ev,multiple:!0,clickOutsideToClose:!1,locals:{$dialogScope:{contactsData:data,type:data&&data.id?"Edit":"Modification"}}}).then(function(res){if(res)if("Edit"==res.type){$scope.contactList[$index]}else $scope.contactList[$index]=res})},$scope.AddContact=function(ev,data,$index){$mdDialog.show({controller:"customer.contacts",templateUrl:"assets/js/modules/customer/create-customer/customer-contact.html",parent:angular.element(document.body),targetEvent:ev,multiple:!0,clickOutsideToClose:!0,locals:{$dialogScope:{type:"Add"}}}).then(function(res){res&&$scope.contactList.push(res)})},$scope.companyData=[],!$scope.companyData.length){var add={};$scope.companyData.push(add)}$scope.changeDirection=function(){skipClick||($scope.arrowDirection=!$scope.arrowDirection,$scope.arrowDirection?$scope.showContent=!1:$scope.showContent=!0),skipClick=!1},$scope.dropdownSettings={scrollableHeight:"200px",scrollable:!0},$scope.customButtonText={buttonDefaultText:"Select all applicable"},$scope.uploadAttachmentsToS3=function(file,$index,files){var upload=!1;$scope.current_user&&$scope.current_user.data||($scope.current_user={},$scope.current_user.data=$dialogScope.userInfo);var path="user/"+$scope.current_user.data.id+"/customer/customerAttachments";s3Service.uploadFile(path,file,function(url){files.length?(files.forEach(function(item){item.index==$index&&(upload=!0,item.url=url)}),upload||files.push({url:url,index:$index})):files.push({url:url,index:$index}),Notification.success({message:"Successfully uploaded file",positionX:"right",positionY:"top"})})},$scope.cancelCustomerInternal=function(){$mdDialog.hide()},$scope.saveCustomer=function(customer,valid){$scope.customer.categories=[];var filterCategories=[];if(!customer.name)return void Notification.error({message:"please enter customer name",positionX:"right",positionY:"top"});if(customer.contact)return void(customer.contact.firstname&&Notification.error({message:"please enter firstname",positionX:"right",positionY:"top"}));if($scope.attachments.length?customer.attachments=$scope.attachments.map(function(item){return item.url}):customer.attachments=[],$scope.addresses.length?customer.addresses=$scope.addresses:customer.addresses=[],$scope.contactList.length?customer.contacts=$scope.contactList:customer.contacts=[],$scope.catalogs.length?customer.catalogs=$scope.catalogs.map(function(item){return item.url}):customer.catalogs=[],customer.role_type&&(customer.role_type=[customer.role_type.id]),$scope.existingAttachments&&$scope.existingAttachments.forEach(function(item){customer.attachments.push(item.filePath)}),$scope.existingCatalogs&&$scope.existingCatalogs.forEach(function(item){customer.catalogs.push(item.filePath)}),$scope.selectedCategories.length){var arr=[],data=[];$scope.selectedCategories.map(function(item){var obj={};item.category_name&&(obj.parent_category=item.category_name.parentCategory),item.sub_category&&(obj.sub_category=item.sub_category),item.sub_sub_category&&(obj.sub_sub_category=item.sub_sub_category),item.sub_sub_category&&(obj.sub_sub_sub_category=item.sub_sub_sub_category),Object.keys(obj).length&&data.push(obj),item.newCategories&&item.newCategories.length&&arr.push(item.newCategories[0])}),filterCategories=arr.length?data.concat(arr):data}if(customer.categories&&customer.categories.length){var filter=[];customer.categories.map(function(item){var obj={};obj.parent_category=item.parent_category,obj.sub_category=item.sub_category,obj.sub_sub_category=item.sub_sub_category,obj.sub_sub_sub_category=item.sub_sub_sub_category,filter.push(obj)}),customer.categories=filter.concat(filterCategories)}else filterCategories.length?customer.categories=filterCategories:customer.categories=[];customer.id?CustomerService.update(customer.id,customer).then(function(data){Notification.success({message:"Successfully updated customer",positionX:"right",positionY:"top"}),$mdDialog.hide(data.data)}):CustomerService.post(customer).then(function(data){Notification.success({message:"Successfully added customer",positionX:"right",positionY:"top"}),$mdDialog.hide(data.data)},function(err){$scope.error=err.data})},$scope.CreateAddress=function(ev){$mdDialog.show({controller:"customer.addresses",templateUrl:"assets/js/modules/customer/add-address/customer-address.html",parent:angular.element(document.body),targetEvent:ev,multiple:!0,clickOutsideToClose:!1,locals:{$dialogScope:{type:"Add"}}}).then(function(res){res&&Object.keys(res).length&&$scope.addresses.push(res)})},$scope.removeAddress=function($index){$scope.addresses.splice($index,1)},$scope.EditAddress=function(ev,data,$index){$mdDialog.show({controller:"customer.addresses",templateUrl:"assets/js/modules/customer/add-address/customer-address.html",parent:angular.element(document.body),targetEvent:ev,multiple:!0,clickOutsideToClose:!1,locals:{$dialogScope:{addressInfo:data,type:data&&data.id?"Edit":"Modification"}}}).then(function(res){res&&("Edit"==res.type?$scope.addresses=$scope.addresses.map(function(item){return item.id==res.id&&(item=res),item}):$scope.addresses[$index]=res)})}}])}();
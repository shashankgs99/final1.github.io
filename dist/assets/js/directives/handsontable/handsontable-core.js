"use strict";!function(){var app=angular.module("app");app.directive("handsontableBase",["$location","$window","$injector","$timeout","HandsonApiAdapter",function($location,$window,$injector,$timeout,HandsonApiAdapter){var directive={};return directive.replace=!0,directive.restrict="AE",directive.scope=!1,directive.templateUrl="/assets/js/directives/handsontable/partials/handsontable-base.html",directive.link=function(scope,el,attr){scope.functions={},scope.baseIsLoaded=!1,attr.readOnly?scope.readOnly=attr.readOnly:scope.readOnly=!1,attr.params&&(scope.params=JSON.parse(attr.params)),attr.height?scope.height=attr.height:scope.height=500,attr.minRows?scope.minRows=attr.minRows:scope.minRows=5,attr.excludeFields?scope.excludeFields=attr.excludeFields:scope.excludeFields=null,attr.includeFields?scope.includeFields=attr.includeFields:scope.includeFields=null,attr.pageSize?scope.pageSize=attr.pageSize:scope.pageSize=null,attr.page?scope.page=attr.page:scope.page=null,attr.gridOptions||(scope.gridOptions=null),attr.filterType?scope.filterType=attr.filterType:scope.filterType=null,scope.apiService=$injector.get(attr.apiService),scope.baseIsLoaded=!0,attr.$observe("params",function(val){scope.params=JSON.parse(val),scope.functions.length&&scope.functions.render()})},directive}]),app.directive("handsontableApiService",["$location","$window","$injector","$timeout","HandsonApiAdapter","$stateParams",function($location,$window,$injector,$timeout,HandsonApiAdapter,$stateParams){var directive={};directive.replace=!1,directive.restrict="AE",directive.scope=!1;var rental_period_types=[];return directive.link=function(scope,el,attr){scope.apiService.getRentalPeriodTypes&&scope.apiService.getRentalPeriodTypes().then(function(data){rental_period_types=data.data.results}),scope.functions.render=function(){console.log("Params: "+scope.params),$stateParams.rental&&(scope.params.stock_or_inventory="Rental"),scope.isDataLoaded=!1,$timeout(function(){scope.apiService.getSchema().then(function(schema){scope.schema=schema,console.log(scope.schema),scope.apiService.getOutput(scope.params).then(function(data){scope.count=data.data.count,scope.data=data.data.results,$stateParams.rental&&(scope.data=mapRentalPeriod(scope.data)),scope.isDataLoaded=!0})})},2e3)};var mapRentalPeriod=function(records){return records=records.map(function(item){if("Rental"===item.stock_or_inventory){var types=rental_period_types.filter(function(type){return type.id===item.rental_period});types.length?(item.rental_period=types[0].period_type,item.unit_price+=" "+item.rental_period):item.rental_period=null}else item.rental_period=null;return item})};scope.functions.render()},directive}]),app.directive("handsontableSettings",["$location","$window","$injector","$timeout","HandsonApiAdapter",function($location,$window,$injector,$timeout,HandsonApiAdapter){var directive={};return directive.replace=!1,directive.restrict="AE",directive.scope=!1,directive.templateUrl="/assets/js/directives/handsontable/partials/handsontable-settings.html",directive.link=function(scope,el,attr){console.log(HandsonApiAdapter.generateColHeadersFromSchema(scope.schema.data,scope.excludeFields,scope.includeFields)),scope.isSettingsLoaded=!1,scope.settings={colHeaders:HandsonApiAdapter.generateColHeadersFromSchema(scope.schema.data,scope.excludeFields,scope.includeFields),columns:HandsonApiAdapter.generateColInfoArrayFromSchema(scope.schema.data,!0,scope.excludeFields,scope.includeFields),minRows:scope.minRows,viewportRowRenderingOffset:200,viewportColumnRenderingOffset:30,filters:!1,height:scope.height,columnSorting:{column:0,sortOrder:!0,sortEmptyCells:!1}},scope.isSettingsLoaded=!0,scope.gridOptions&&(scope.gridOptions.data=scope.data)},directive}])}();